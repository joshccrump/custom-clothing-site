name: Deploy GitHub Pages (single-artifact)

on:
  push:
    branches: [ "main" ]          # change if your default branch differs
  workflow_dispatch:

# Prevent parallel runs from the same branch creating two artifacts
concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pages: write
  id-token: write

# Required by actions/deploy-pages
env:
  name: github-pages
  url: ${{ steps.deployment.outputs.page_url }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # If you need Node to build your site, keep this.
      # If your site is purely static already, you can remove setup-node + install + build and just upload a folder.
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          elif [ -f package.json ]; then
            npm install --no-audit --no-fund
          else
            echo "No package.json found, skipping install."
          fi

      # Build your site here. Adjust the command to your stack.
      # For Vite: npm run build -> dist
      # For Next static export: npm run build && npm run export -> out
      # For your repo, set OUTPUT_DIR to where your built/static site lives.
      - name: Build
        run: |
          if [ -f package.json ]; then
            npm run build || true
          fi

      - name: Determine output directory
        id: outdir
        run: |
          # Adjust priority order to match your project
          if [ -d "dist" ]; then echo "dir=dist" >> $GITHUB_OUTPUT
          elif [ -d "out" ]; then echo "dir=out" >> $GITHUB_OUTPUT
          elif [ -d "build" ]; then echo "dir=build" >> $GITHUB_OUTPUT
          else echo "dir=." >> $GITHUB_OUTPUT; fi

      # ðŸ”‘ Upload exactly ONE artifact named "github-pages"
      - name: Upload Pages artifact (single)
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.outdir.outputs.dir }}
          name: github-pages    # do not change; deploy-pages looks for this

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages   # MUST match upload step
