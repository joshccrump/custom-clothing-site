async function loadJSON(url){ const res=await fetch(url,{cache:'no-store'}); if(!res.ok) throw new Error('Failed to load '+url+' ('+res.status+')'); return await res.json(); }
function fmtPrice(n,c='USD'){ try{return new Intl.NumberFormat(undefined,{style:'currency',currency:c}).format(n);}catch{return '$'+Number(n).toFixed(2);} }
function unique(arr){ return [...new Set(arr.filter(Boolean))]; }
function qs(s,r=document){ return r.querySelector(s); } function qsa(s,r=document){ return [...r.querySelectorAll(s)]; }
function buildTagPills(container,tags,active,onClick){ container.innerHTML=''; unique(tags).sort((a,b)=>a.localeCompare(b)).forEach(t=>{ const b=document.createElement('button'); b.type='button'; b.className='pill'+(active.includes(t)?' pill--active':''); b.textContent=t; b.addEventListener('click',()=>onClick(t)); container.appendChild(b); }); }
function paginate(list,page,per){ const total=list.length, pages=Math.max(1,Math.ceil(total/per)); const p=Math.min(Math.max(1,page),pages); const start=(p-1)*per; return {page:p,pages,total,items:list.slice(start,start+per)}; }
function hay(p){ return [p.title,p.description,p.category,...(p.tags||[]),...(p.sizes||[]),...(p.colors||[])].join(' ').toLowerCase(); }
function filterProducts(products,state){ const q=(state.q||'').toLowerCase().trim(); const min=Number(state.minPrice??0); const max=Number(state.maxPrice??Infinity); const cat=(state.category||'').toLowerCase(); const tagset=new Set(state.tags||[]); const size=(state.size||'').toLowerCase(); let out=products.filter(p=>{ if(p.status&&p.status.toLowerCase()==='hidden')return false; const priceOk=typeof p.price==='number'?(p.price>=min&&p.price<=max):true; const catOk=cat?((p.category||'').toLowerCase()===cat):true; const sizeOk=size?((p.sizes||[]).map(s=>String(s).toLowerCase()).includes(size)):true; const tagsOk=tagset.size?[...tagset].every(t=>(p.tags||[]).includes(t)):true; const textOk=q?hay(p).includes(q):true; return priceOk&&catOk&&sizeOk&&tagsOk&&textOk; }); const sort=state.sort||'featured'; if(sort==='price-asc') out.sort((a,b)=>(a.price||0)-(b.price||0)); else if(sort==='price-desc') out.sort((a,b)=>(b.price||0)-(a.price||0)); else if(sort==='newest') out.sort((a,b)=>new Date(b.createdAt||0)-new Date(a.createdAt||0)); return out; }
function renderPagination(container,page,pages,onJump){ container.innerHTML=''; const prev=document.createElement('button'); prev.textContent='Prev'; prev.disabled=(page<=1); prev.addEventListener('click',()=>onJump(Math.max(1,page-1))); container.appendChild(prev); const info=document.createElement('span'); info.className='muted'; info.style.padding='8px 6px'; info.textContent=`Page ${page} of ${pages}`; container.appendChild(info); const next=document.createElement('button'); next.textContent='Next'; next.disabled=(page>=pages); next.addEventListener('click',()=>onJump(Math.min(pages,page+1))); container.appendChild(next); }
function renderGrid(container,products,currency,onQuickView){ container.innerHTML=''; if(!products.length){ container.innerHTML='<div class="empty">No items match your filters.</div>'; return; } for(const p of products){ const card=document.createElement('article'); card.className='card'; const media=document.createElement('div'); media.className='card__media'; const img=document.createElement('img'); img.className='card__img'; img.alt=p.title||'Product image'; img.src=p.thumbnail||'../assets/default-product.svg'; media.appendChild(img); if(p.tags&&p.tags.includes('best-seller')){ const b=document.createElement('span'); b.className='badge'; b.textContent='Best Seller'; media.appendChild(b);} if(Number(p.stock)===0){ const o=document.createElement('span'); o.className='badge out'; o.textContent='Out of stock'; media.appendChild(o);} const body=document.createElement('div'); body.className='card__body'; const t=document.createElement('h3'); t.className='title'; t.textContent=p.title||'Untitled'; const pr=document.createElement('div'); pr.className='price'; pr.textContent=typeof p.price==='number'?fmtPrice(p.price,p.currency||currency):''; const sizes=document.createElement('div'); sizes.className='sizes'; (p.sizes||[]).forEach(s=>{ const x=document.createElement('span'); x.className='size'; x.textContent=s; sizes.appendChild(x); }); const tags=document.createElement('div'); tags.className='tags'; (p.tags||[]).forEach(s=>{ const x=document.createElement('span'); x.className='tag'; x.textContent=s; tags.appendChild(x); }); const actions=document.createElement('div'); actions.className='card__actions'; if(p.url){ const buy=document.createElement('a'); buy.className='btn btn--buy'; buy.href=p.url; buy.target='_blank'; buy.rel='noopener'; buy.textContent='Buy'; actions.appendChild(buy);} const details=document.createElement('button'); details.className='btn btn--ghost'; details.textContent=p.url?'Details':'View'; details.addEventListener('click',()=>onQuickView(p)); actions.appendChild(details); body.appendChild(t); body.appendChild(pr); if((p.sizes||[]).length) body.appendChild(sizes); if((p.tags||[]).length) body.appendChild(tags); body.appendChild(actions); card.appendChild(media); card.appendChild(body); container.appendChild(card);} }
function openQuickView(modal,product,currency){ document.querySelector('.modal__title').textContent=product.title||'Details'; document.querySelector('.modal__price').textContent=typeof product.price==='number'?fmtPrice(product.price,product.currency||currency):''; document.querySelector('.modal__desc').textContent=product.description||''; const img=document.querySelector('.modal__img'); img.src=(product.images&&product.images[0])||product.thumbnail||'../assets/default-product.svg'; img.alt=product.title||'Product image'; const sizes=document.querySelector('.modal__sizes'); sizes.innerHTML=''; (product.sizes||[]).forEach(s=>{ const x=document.createElement('span'); x.className='size'; x.textContent=s; sizes.appendChild(x); }); const buy=document.querySelector('.modal__buy'); if(product.url){ buy.href=product.url; buy.style.display='inline-block'; } else { buy.style.display='none'; } modal.classList.add('show'); document.querySelector('.close').focus(); }
function closeQuickView(modal){ modal.classList.remove('show'); }
document.addEventListener('DOMContentLoaded', async function(){ const state={q:'',category:'',tags:[],size:'',minPrice:'',maxPrice:'',sort:'featured',page:1,perPage:12}; const grid=document.querySelector('#grid'); const pager=document.querySelector('#pager'); const tagsRow=document.querySelector('#tagsRow'); const modal=document.querySelector('#quickview'); const closeBtn=document.querySelector('#closeModal'); const searchEl=document.querySelector('#search'); const catEl=document.querySelector('#category'); const sizeEl=document.querySelector('#size'); const sortEl=document.querySelector('#sort'); let products=[]; let currency='USD'; try{ products=await loadJSON('../data/products.json'); const sample=products.find(p=>typeof p.price==='number'&&p.currency); if(sample) currency=sample.currency; }catch(e){ grid.innerHTML='<div class="empty">Could not load products. Check <code>data/products.json</code>.</div>'; console.error(e); return; } const categories=unique(products.map(p=>p.category)); catEl.innerHTML='<option value="">All categories</option>'+categories.map(c=>`<option>${c}</option>`).join(''); const sizes=unique(products.flatMap(p=>p.sizes||[])); sizeEl.innerHTML='<option value="">Any size</option>'+sizes.map(s=>`<option>${s}</option>`).join(''); const allTags=unique(products.flatMap(p=>p.tags||[])); const handleTag=(t)=>{ const i=state.tags.indexOf(t); if(i>=0) state.tags.splice(i,1); else state.tags.push(t); state.page=1; render(); buildTagPills(tagsRow, allTags, state.tags, handleTag); }; buildTagPills(tagsRow, allTags, state.tags, handleTag); searchEl.value=state.q; searchEl.addEventListener('input', ()=>{ state.q=searchEl.value.trim(); state.page=1; render(); }); catEl.addEventListener('change', ()=>{ state.category=catEl.value.trim(); state.page=1; render(); }); sizeEl.addEventListener('change', ()=>{ state.size=sizeEl.value.trim(); state.page=1; render(); }); sortEl.addEventListener('change', ()=>{ state.sort=sortEl.value.trim(); state.page=1; render(); }); closeBtn.addEventListener('click', ()=>closeQuickView(modal)); modal.addEventListener('click',(e)=>{ if(e.target===modal) closeQuickView(modal); }); document.addEventListener('keydown',(e)=>{ if(e.key==='Escape') closeQuickView(modal); }); function render(){ const filtered=filterProducts(products,state); const {page,pages,items}=paginate(filtered,state.page,state.perPage); renderGrid(grid,items,currency,(p)=>openQuickView(modal,p,currency)); renderPagination(pager,page,pages,(jump)=>{ state.page=jump; render(); }); } render(); });